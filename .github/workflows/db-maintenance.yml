name: Database Maintenance

on:
  workflow_dispatch:
    inputs:
      command:
        description: 'Database command to run'
        required: true
        default: migrate
        type: choice
        options:
          - migrate
          - push
          - reset
      reset_before:
        description: 'Reset database before running the selected command'
        required: false
        default: false
        type: boolean
  workflow_call:
    inputs:
      command:
        required: false
        type: string
        default: migrate
      reset_before:
        required: false
        type: boolean
        default: false

jobs:
  database:
    runs-on: ubuntu-22.04
    steps:
      - name: Ensure deploy directory exists
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p /opt/ai-chatbot

      - name: Run database command
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            cd /opt/ai-chatbot

            COMMAND="${{ inputs.command }}"
            RESET_BEFORE="${{ inputs.reset_before }}"

            case "$COMMAND" in
              migrate|push|reset) ;;
              *)
                echo "Unsupported command: $COMMAND"
                exit 1
                ;;
            esac

            docker compose -f docker-compose.prod.yml up -d app

            if [ "$COMMAND" = "reset" ]; then
              docker compose -f docker-compose.prod.yml exec -T app pnpm db:reset
              exit 0
            fi

            if [ "$RESET_BEFORE" = "true" ]; then
              docker compose -f docker-compose.prod.yml exec -T app pnpm db:reset
            fi

            docker compose -f docker-compose.prod.yml exec -T app pnpm "db:${COMMAND}"
