name: Deploy to Production
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    uses: ./.github/workflows/lint.yml

  deploy:
    runs-on: ubuntu-22.04
    needs: lint
    concurrency:
      group: deploy-${{ github.sha }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ai-chatbot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Ensure deploy directory exists
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p /opt/ai-chatbot

      - name: Upload docker-compose definition
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: 'docker-compose.prod.yml'
          target: '/opt/ai-chatbot/'
          timeout: 300s

      - name: Deploy to droplet
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /opt/ai-chatbot
            export BLOB_READ_WRITE_TOKEN=${{ secrets.BLOB_READ_WRITE_TOKEN }}
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            export BETTER_AUTH_URL=${{ secrets.BETTER_AUTH_URL }}
            export MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY }}
            export BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}
            docker compose -f docker-compose.prod.yml down
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ai-chatbot:latest
            docker compose -f docker-compose.prod.yml up -d
            docker compose -f docker-compose.prod.yml exec -T app pnpm db:reset
            docker compose -f docker-compose.prod.yml exec -T app pnpm db:push
