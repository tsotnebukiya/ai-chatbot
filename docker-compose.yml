services:
  migration:
    build:
      context: .
      dockerfile: Dockerfile.migration
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
    env_file:
      - .env
    networks:
      - my_network

  web:
    build:
      context: .
      args:
        - POSTGRES_URL=${POSTGRES_URL_BUILD}
        - BETTER_AUTH_URL=${BETTER_AUTH_URL}
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - POSTGRES_URL=${POSTGRES_URL}
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - migration
    networks:
      - my_network

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    command: ['redis-server', '--appendonly', 'yes']
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - my_network

volumes:
  postgres_data:
  redis_data:

networks:
  my_network:
    name: my_network
    driver: bridge
